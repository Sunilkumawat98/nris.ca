openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://stage-api.nris.ca'
paths:
  /api/v1/get-all-country:
    get:
      summary: getAllCountry
      operationId: getAllCountry
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\n\n\n<aside class=\"notice\">basepath/api/v1/get-all-country</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"status_code\": 200,\n\"message\": \"Successfully country list get...\",\n\"data\": [\n{\n\"id\": 1,\n\"name\": \"USA\",\n\"color\": \"#16b19f\",\n\"code\": \"us\",\n\"domain\": \"usa\",\n\"image\": \"152194054262639fda95ac05.12411768.jpg\",\n\"c_meta_title\": \"Indian Website for Nris in USA\",\n\"c_meta_description\": \"An Indian community website for all NRIS residing in United States. Get information on local real estate, Indian movies, restaurants, visiting spots etc.\",\n\"c_meta_keywords\": \"Indian websites in USA, NRI websites, Indian community websites, classified website for NRIS in USA, free ads website\",\n},\n{\n\"id\": 2,\n\"name\": \"Canada\",\n\"color\": \"#990d00\",\n\"code\": \"ca\",\n\"domain\": \"canada\",\n\"image\": \"47659423262639bd6a30242.39786820.jpg\",\n\"c_meta_title\": \"Indian Website for Nris in Canada\",\n\"c_meta_description\": \"An Indian community website for all NRIS residing in Canada . Get information on\",\n\"c_meta_keywords\": \"Indian websites in Canada, NRI websites, Indian community websites, classified website for NRIS in Canada, free ads website\",\n}\n]\n}"
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'Country not found...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Country not found...'
                  data:
                    type: array
                    example: []
      tags:
        - 'Country State & City'
      security: []
  /api/v1/get-all-state-by-country:
    post:
      summary: getAllStateByCountry
      operationId: getAllStateByCountry
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\nEX\n {\n\"country_id\":1\n}\n\n<aside class=\"note\">basepath/api/v1/get-all-state-by-country</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully state list get...'
                  data:
                    -
                      id: 3
                      name: 'Aberconwy and Colwyn'
                      code: AC
                      domain: aberconwyandcolwyn
                      description: 'Aberconwy and Colwyn'
                      logo: ''
                      s_meta_title: ''
                      s_meta_description: ''
                      s_meta_keywords: ''
                      header_image: 'NULL'
                      header_image2: 'NULL'
                      header_image3: 'NULL'
                      created_by: 'NULL'
                    -
                      id: 5
                      name: 'Aberdeen City'
                      code: ADC
                      domain: aberdeencity
                      description: 'Aberdeen City'
                      logo: ''
                      s_meta_title: ''
                      s_meta_description: ''
                      s_meta_keywords: ''
                      header_image: 'NULL'
                      header_image2: 'NULL'
                      header_image3: 'NULL'
                      created_by: 'NULL'
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully state list get...'
                  data:
                    type: array
                    example:
                      -
                        id: 3
                        name: 'Aberconwy and Colwyn'
                        code: AC
                        domain: aberconwyandcolwyn
                        description: 'Aberconwy and Colwyn'
                        logo: ''
                        s_meta_title: ''
                        s_meta_description: ''
                        s_meta_keywords: ''
                        header_image: 'NULL'
                        header_image2: 'NULL'
                        header_image3: 'NULL'
                        created_by: 'NULL'
                      -
                        id: 5
                        name: 'Aberdeen City'
                        code: ADC
                        domain: aberdeencity
                        description: 'Aberdeen City'
                        logo: ''
                        s_meta_title: ''
                        s_meta_description: ''
                        s_meta_keywords: ''
                        header_image: 'NULL'
                        header_image2: 'NULL'
                        header_image3: 'NULL'
                        created_by: 'NULL'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        name:
                          type: string
                          example: 'Aberconwy and Colwyn'
                        code:
                          type: string
                          example: AC
                        domain:
                          type: string
                          example: aberconwyandcolwyn
                        description:
                          type: string
                          example: 'Aberconwy and Colwyn'
                        logo:
                          type: string
                          example: ''
                        s_meta_title:
                          type: string
                          example: ''
                        s_meta_description:
                          type: string
                          example: ''
                        s_meta_keywords:
                          type: string
                          example: ''
                        header_image:
                          type: string
                          example: 'NULL'
                        header_image2:
                          type: string
                          example: 'NULL'
                        header_image3:
                          type: string
                          example: 'NULL'
                        created_by:
                          type: string
                          example: 'NULL'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'State not found...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'State not found...'
                  data:
                    type: array
                    example: []
      tags:
        - 'Country State & City'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*country_id':
                  type: integer
                  description: ''
                  example: 1
              required:
                - '*country_id'
      security: []
  /api/v1/get-all-city-by-state-and-country:
    post:
      summary: getAllCityByStateAndCountry
      operationId: getAllCityByStateAndCountry
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\n {\n\"country_id\":101,\n\"state_id\":4037\n}\n<aside class=\"notice\">basepath/api/v1/get-all-city-by-state-and-country</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully city list get...'
                  data:
                    -
                      id: 1
                      name: Airdrie
                      state_code: AB
                    -
                      id: 2
                      name: Brooks
                      state_code: AB
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully city list get...'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Airdrie
                        state_code: AB
                      -
                        id: 2
                        name: Brooks
                        state_code: AB
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Airdrie
                        state_code:
                          type: string
                          example: AB
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'City Not Found...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'City Not Found...'
                  data:
                    type: array
                    example: []
      tags:
        - 'Country State & City'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*country_id':
                  type: integer
                  description: ''
                  example: 1
                '*state_id':
                  type: integer
                  description: ''
                  example: 1
              required:
                - '*country_id'
                - '*state_id'
      security: []
  /api/v1/register:
    post:
      summary: register
      operationId: register
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\nEX\n {\n\"first_name\":\"Abc\",\n\"last_name\":\"Def\",\n\"email_id\":\"You@domain.com\",\n\"dob\":\"2023-02-02\",\n\"mobile\":\"9899****54\",\n\"password\":\"Abc@12345\",\n\"country_id\":1,\n\"state_id\":1\n}\n<aside class=\"notice\">basepath/api/v1/register-mobile-no</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully Registered...'
                  data:
                    user_id: 1
                    email: you@domain.com
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully Registered...'
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: you@domain.com
        202:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 202
                  message: 'Oops, please try again...'
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 202
                  message:
                    type: string
                    example: 'Oops, please try again...'
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 409
                  message: 'Email Id already exist...'
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: 'Email Id already exist...'
      tags:
        - 'Login, Register'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                '*first_name':
                  type: required
                  description: "String     Ex ('Abc')"
                  example: autem
                '*last_name':
                  type: required
                  description: "String     Ex ('def')"
                  example: nulla
                '*email_id':
                  type: required
                  description: "Email      Ex ('you@domain.com')"
                  example: facere
                '*dob':
                  type: required
                  description: "Date       Ex ('YYYY-MM-DD')"
                  example: consectetur
                '*mobile':
                  type: required
                  description: "String     Ex ('9876****09')"
                  example: dolore
                '*password':
                  type: required
                  description: "String     Ex ('Abc')"
                  example: quod
                '*country_id':
                  type: required
                  description: "Number     Ex ('1/2/3/4')"
                  example: quia
                '*state_id':
                  type: required
                  description: "Number     Ex ('1/2/3/4')"
                  example: quibusdam
      security: []
  /api/v1/login:
    post:
      summary: login
      operationId: login
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\n\n <aside class=\"notice\">basepath/api/v1/login</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully login..'
                  data:
                    user_data:
                      user_id: 1
                      name: 'Md Saddam Hussain'
                      email: Hussain@gmail.com
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWwtbnJpcy5jYS9hcGkvdjEvbG9naW4iLCJpYXQiOjE2ODk2Nzk3ODYsImV4cCI6MTY4OTY4MzM4NiwibmJmIjoxNjg5Njc5Nzg2LCJqdGkiOiJUeXFsTU95MlA0WXpibXFsIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.xSMoCqyWexiUAmnCNmC6xJZjvOWbQM9GMRZuQUYpSfc
                    token_type: bearer
                    expires_in: 60
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully login..'
                  data:
                    type: object
                    properties:
                      user_data:
                        type: object
                        properties:
                          user_id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Md Saddam Hussain'
                          email:
                            type: string
                            example: Hussain@gmail.com
                      access_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWwtbnJpcy5jYS9hcGkvdjEvbG9naW4iLCJpYXQiOjE2ODk2Nzk3ODYsImV4cCI6MTY4OTY4MzM4NiwibmJmIjoxNjg5Njc5Nzg2LCJqdGkiOiJUeXFsTU95MlA0WXpibXFsIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.xSMoCqyWexiUAmnCNmC6xJZjvOWbQM9GMRZuQUYpSfc
                      token_type:
                        type: string
                        example: bearer
                      expires_in:
                        type: integer
                        example: 60
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 401
                  message: 'Incorrect Password...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: 'Incorrect Password...'
                  data:
                    type: array
                    example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'Eamil id not found...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Eamil id not found...'
                  data:
                    type: array
                    example: []
      tags:
        - 'Login, Register'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                '*email':
                  type: required
                  description: "Number     Ex ('you@domain.com')"
                  example: gustave.bashirian@example.com
                '*password':
                  type: required
                  description: "String     Ex ('********')"
                  example: sint
      security: []
  /api/v1/forgot-pass:
    post:
      summary: forgotPass
      operationId: forgotPass
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\n\n<aside class=\"notice\">basepath/api/v1/forgot-pass</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully email send...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully email send...'
                  data:
                    type: array
                    example: []
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 201
                  message: 'Oops, something went wrong...'
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: 'Oops, something went wrong...'
        202:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 202
                  message: 'Oops, please try again...'
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 202
                  message:
                    type: string
                    example: 'Oops, please try again...'
      tags:
        - 'Login, Register'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                '*email':
                  type: required
                  description: "Number     Ex ('you@domain.com')"
                  example: fbartoletti@example.net
      security: []
  /api/v1/forgot-password-change:
    post:
      summary: changeForgotPassword
      operationId: changeForgotPassword
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and a response not found!\n\n\n<aside class=\"notice\">basepath/api/v1/forgot-password-change</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully password updated...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully password updated...'
                  data:
                    type: array
                    example: []
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 201
                  message: 'Oops, some problem occure, Please try again...'
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: 'Oops, some problem occure, Please try again...'
      tags:
        - 'Login, Register'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                '*email':
                  type: required
                  description: "Number     Ex ('you@domain.com')"
                  example: walsh.betty@example.org
                '*new_password':
                  type: required
                  description: "String     Ex ('Abc@123')"
                  example: velit
                '*retype_password':
                  type: required
                  description: "String     Ex ('Abc@123')"
                  example: molestias
      security: []
  /api/v1/get-all-nris-talk:
    get:
      summary: getAllNrisTalk
      operationId: getAllNrisTalk
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Profile not found and token related response...\n\nEX\n\n<aside class=\"notice\">basepath/api/v1/get-all-nris-talk</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully your list found..'
                  data:
                    current_page: 1
                    data:
                      -
                        id: 6
                        title: 'new this is test title 2'
                        title_slug: new-this-is-test-title-2
                        description: 'This is test title description again2'
                        meta_title: null
                        meta_description: null
                        meta_keywords: null
                        total_views: null
                        created_at: '20-Jul-2023 07:18 AM'
                        its_reply: null
                      -
                        id: 4
                        title: 'this is test title'
                        title_slug: this-is-test-title
                        description: 'This is test title description'
                        meta_title: null
                        meta_description: null
                        meta_keywords: null
                        total_views: null
                        created_at: '20-Jul-2023 06:50 AM'
                        its_reply:
                          id: 3
                          talk_id: 4
                          comment: 'this is reply of talk 1'
                          created_at: '20-Jul-2023 07:39 AM'
                    first_page_url: 'BASE_PATH/get-all-nris-talk?page=1'
                    from: 1
                    next_page_url: null
                    path: BASE_PATH/get-all-nris-talk
                    per_page: 15
                    prev_page_url: null
                    to: 3
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully your list found..'
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 6
                            title: 'new this is test title 2'
                            title_slug: new-this-is-test-title-2
                            description: 'This is test title description again2'
                            meta_title: null
                            meta_description: null
                            meta_keywords: null
                            total_views: null
                            created_at: '20-Jul-2023 07:18 AM'
                            its_reply: null
                          -
                            id: 4
                            title: 'this is test title'
                            title_slug: this-is-test-title
                            description: 'This is test title description'
                            meta_title: null
                            meta_description: null
                            meta_keywords: null
                            total_views: null
                            created_at: '20-Jul-2023 06:50 AM'
                            its_reply:
                              id: 3
                              talk_id: 4
                              comment: 'this is reply of talk 1'
                              created_at: '20-Jul-2023 07:39 AM'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 6
                            title:
                              type: string
                              example: 'new this is test title 2'
                            title_slug:
                              type: string
                              example: new-this-is-test-title-2
                            description:
                              type: string
                              example: 'This is test title description again2'
                            meta_title:
                              type: string
                              example: null
                            meta_description:
                              type: string
                              example: null
                            meta_keywords:
                              type: string
                              example: null
                            total_views:
                              type: string
                              example: null
                            created_at:
                              type: string
                              example: '20-Jul-2023 07:18 AM'
                            its_reply:
                              type: string
                              example: null
                      first_page_url:
                        type: string
                        example: 'BASE_PATH/get-all-nris-talk?page=1'
                      from:
                        type: integer
                        example: 1
                      next_page_url:
                        type: string
                        example: null
                      path:
                        type: string
                        example: BASE_PATH/get-all-nris-talk
                      per_page:
                        type: integer
                        example: 15
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 3
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'List not found...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'List not found...'
                  data:
                    type: array
                    example: []
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 500
                  message: 'Oops, something went wrong...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: 'Oops, something went wrong...'
                  data:
                    type: array
                    example: []
      tags:
        - 'NrisTalk Related'
      security: []
  /api/v1/get-nris-talk-reply-by-id:
    post:
      summary: getNrisTalkReplyById
      operationId: getNrisTalkReplyById
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Profile not found and token related response...\n\n EX\n {\n\"talk_id\":4\n}\n\n<aside class=\"notice\">basepath/api/v1/get-nris-talk-reply-by-id</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"status_code\": 200,\n\"message\": \"Successfully your list found..\",\n\"data\": {\n\"current_page\": 1,\n\"data\": [\n{\n\"id\": 5,\n\"talk_id\": 4,\n\"comment\": \"testing again\",\n\"created_at\": 20-Jul-2023 07:39 AM\n},\n{\n\"id\": 3,\n\"talk_id\": 4,\n\"comment\": \"this is reply of talk 1\",\n\"created_at\": \"20-Jul-2023 07:39 AM\"\n}\n],\n\"first_page_url\": \"BASE_PATH/get-nris-talk-reply-by-id?page=1\",\n\"from\": 1,\n\"next_page_url\": null,\n\"path\": \"BASE_PATH/get-nris-talk-reply-by-id\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 3\n}\n}"
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'List not found...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'List not found...'
                  data:
                    type: array
                    example: []
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 500
                  message: 'Oops, something went wrong...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: 'Oops, something went wrong...'
                  data:
                    type: array
                    example: []
      tags:
        - 'NrisTalk Related'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*talk_id':
                  type: integer
                  description: ''
                  example: 1
              required:
                - '*talk_id'
      security: []
  /api/v1/create-nris-talk:
    post:
      summary: createNrisTalk
      operationId: createNrisTalk
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Profile not found and token related response...\n\nEX\n {\n\"user_id\":1,\n\"state_id\":1,\n\"title\":\"new this is test title 2\",\n\"description\":\"This is test title description again2\"\n}\n\n<aside class=\"notice\">basepath/api/v1/create-nris-talk</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer _token required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully Nris talk created...'
                  data:
                    title: 'new this is test title 2'
                    title_slug: new-this-is-test-title-2
                    description: 'This is test title description again2'
                    created_at: '20-Jul-2023 07:18 AM'
                    id: 6
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully Nris talk created...'
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                        example: 'new this is test title 2'
                      title_slug:
                        type: string
                        example: new-this-is-test-title-2
                      description:
                        type: string
                        example: 'This is test title description again2'
                      created_at:
                        type: string
                        example: '20-Jul-2023 07:18 AM'
                      id:
                        type: integer
                        example: 6
        500:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": false,\n\"status_code\": 500,\n\"message\": \"Oops, something went wrong...\",\n\"data\": []\n}\n\n @response 401\n {\n\"message\": \"Token is Invalid\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 419\n {\n\"message\": \"Token is Expired\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 403\n {\n\"message\": \"Authorised Token Not Found\",\n\"status_code\": 401,\n\"status\": false\n}"
      tags:
        - 'NrisTalk Related'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*user_id':
                  type: integer
                  description: ''
                  example: 1
                '*state_id':
                  type: integer
                  description: ''
                  example: 1
                '*title':
                  type: string
                  description: ''
                  example: "'This is test title' in JSON BODY"
                '*description':
                  type: string
                  description: ''
                  example: "'This is test description' in JSON BODY"
              required:
                - '*user_id'
                - '*state_id'
                - '*title'
                - '*description'
  /api/v1/create-nris-talk-reply:
    post:
      summary: createNrisTalkReply
      operationId: createNrisTalkReply
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Profile not found and token related response...\n\nEX\n {\n\"user_id\":1,\n\"state_id\":1,\n\"talk_id\":1,\n\"description\":\"This is test title description again2\"\n}\n\n<aside class=\"notice\">basepath/api/v1/create-nris-talk-reply</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer _token required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully Nris talk reply created...'
                  data:
                    comment: 'this is reply of talk 1'
                    created_at: '20-Jul-2023 07:39 AM'
                    id: 3
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully Nris talk reply created...'
                  data:
                    type: object
                    properties:
                      comment:
                        type: string
                        example: 'this is reply of talk 1'
                      created_at:
                        type: string
                        example: '20-Jul-2023 07:39 AM'
                      id:
                        type: integer
                        example: 3
        500:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": false,\n\"status_code\": 500,\n\"message\": \"Oops, something went wrong...\",\n\"data\": []\n}\n\n @response 401\n {\n\"message\": \"Token is Invalid\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 419\n {\n\"message\": \"Token is Expired\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 403\n {\n\"message\": \"Authorised Token Not Found\",\n\"status_code\": 401,\n\"status\": false\n}"
      tags:
        - 'NrisTalk Related'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*user_id':
                  type: integer
                  description: ''
                  example: 1
                '*state_id':
                  type: integer
                  description: ''
                  example: 1
                '*talk_id':
                  type: integer
                  description: ''
                  example: 1
                '*description':
                  type: string
                  description: ''
                  example: "'This is test description' in JSON BODY"
              required:
                - '*user_id'
                - '*state_id'
                - '*talk_id'
                - '*description'
  /api/v1/get-nris-talk:
    post:
      summary: getNrisTalk
      operationId: getNrisTalk
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Profile not found and token related response...\n\nEX\n {\n\"user_id\":1,\n\"state_id\":1,\n\"talk_id\":1,\n\"description\":\"This is test title description again2\"\n}\n\n<aside class=\"notice\">basepath/api/v1/get-nris-talk</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer _token required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully your list found..'
                  data:
                    current_page: 1
                    data:
                      -
                        id: 4
                        title: 'this is test title'
                        title_slug: this-is-test-title
                        description: 'This is test title description'
                        meta_title: null
                        meta_description: null
                        meta_keywords: null
                        total_views: null
                        created_at: '20-Jul-2023 06:50 AM'
                        its_reply:
                          id: 3
                          talk_id: 4
                          comment: 'this is reply of talk 1'
                          created_at: '20-Jul-2023 07:39 AM'
                    first_page_url: 'BASE_URL/get-nris-talk?page=1'
                    from: 1
                    next_page_url: null
                    path: BASE_URL/get-nris-talk
                    per_page: 15
                    prev_page_url: null
                    to: 1
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully your list found..'
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 4
                            title: 'this is test title'
                            title_slug: this-is-test-title
                            description: 'This is test title description'
                            meta_title: null
                            meta_description: null
                            meta_keywords: null
                            total_views: null
                            created_at: '20-Jul-2023 06:50 AM'
                            its_reply:
                              id: 3
                              talk_id: 4
                              comment: 'this is reply of talk 1'
                              created_at: '20-Jul-2023 07:39 AM'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 4
                            title:
                              type: string
                              example: 'this is test title'
                            title_slug:
                              type: string
                              example: this-is-test-title
                            description:
                              type: string
                              example: 'This is test title description'
                            meta_title:
                              type: string
                              example: null
                            meta_description:
                              type: string
                              example: null
                            meta_keywords:
                              type: string
                              example: null
                            total_views:
                              type: string
                              example: null
                            created_at:
                              type: string
                              example: '20-Jul-2023 06:50 AM'
                            its_reply:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 3
                                talk_id:
                                  type: integer
                                  example: 4
                                comment:
                                  type: string
                                  example: 'this is reply of talk 1'
                                created_at:
                                  type: string
                                  example: '20-Jul-2023 07:39 AM'
                      first_page_url:
                        type: string
                        example: 'BASE_URL/get-nris-talk?page=1'
                      from:
                        type: integer
                        example: 1
                      next_page_url:
                        type: string
                        example: null
                      path:
                        type: string
                        example: BASE_URL/get-nris-talk
                      per_page:
                        type: integer
                        example: 15
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": false,\n\"status_code\": 404,\n\"message\": \"List not found...\",\n\"data\": []\n}\n\n @response 401\n {\n\"message\": \"Token is Invalid\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 419\n {\n\"message\": \"Token is Expired\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 403\n {\n\"message\": \"Authorised Token Not Found\",\n\"status_code\": 401,\n\"status\": false\n}"
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 500
                  message: 'Oops, something went wrong...'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: 'Oops, something went wrong...'
                  data:
                    type: array
                    example: []
      tags:
        - 'NrisTalk Related'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*user_id':
                  type: integer
                  description: ''
                  example: 1
                '*talk_id':
                  type: integer
                  description: ''
                  example: 1
              required:
                - '*user_id'
                - '*talk_id'
  /api/v1/get-user-profile:
    post:
      summary: getUserProfile
      operationId: getUserProfile
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Profile not found and token related response...\n\nEX\n {\n\"user_id\":1\n}\n\n<aside class=\"notice\">basepath/api/v1/get-user-profile</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer _token required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully Profile Get...'
                  data:
                    id: 1
                    first_name: Abc
                    last_name: Def
                    email: you@domain.com
                    dob: '2023-02-02'
                    mobile: '9899****54'
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully Profile Get...'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      first_name:
                        type: string
                        example: Abc
                      last_name:
                        type: string
                        example: Def
                      email:
                        type: string
                        example: you@domain.com
                      dob:
                        type: string
                        example: '2023-02-02'
                      mobile:
                        type: string
                        example: '9899****54'
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": false,\n\"status_code\": 404,\n\"message\": \"Profile not found...\",\n\"data\": []\n}\n\n @response 401\n {\n\"message\": \"Token is Invalid\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 419\n {\n\"message\": \"Token is Expired\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 403\n {\n\"message\": \"Authorised Token Not Found\",\n\"status_code\": 401,\n\"status\": false\n}"
      tags:
        - 'User Profile Related'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*user_id':
                  type: integer
                  description: ''
                  example: 1
              required:
                - '*user_id'
  /api/v1/change-password:
    post:
      summary: changePassword
      operationId: changePassword
      description: "If everything is okay, you'll get a `200` OK response with data.\n\nOtherwise, the request will fail with a `404` error, and Oops, something went wrong...\n\nEX\n {\n\"user_id\":1,\n\"current_password\":\"Abc@123456789\",\n\"new_password\":\"Abc@12345\",\n\"retype_password\":\"Abc@12345\"\n}\n<aside class=\"notice\">basepath/api/v1/change-password</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer _token required .'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully Password Changed...'
                  result: []
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully Password Changed...'
                  result:
                    type: array
                    example: []
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 404
                  message: 'User not found...'
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'User not found...'
        403:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": false,\n\"status_code\": 403,\n\"message\": \"Current password is not being match...\",\n\"data\": []\n}\n @response 401\n {\n\"message\": \"Token is Invalid\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 419\n {\n\"message\": \"Token is Expired\",\n\"status_code\": 401,\n\"status\": false\n}\n\n\n @response 403\n {\n\"message\": \"Authorised Token Not Found\",\n\"status_code\": 401,\n\"status\": false\n}"
      tags:
        - 'User Profile Related'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '*user_id':
                  type: integer
                  description: ''
                  example: 1
                '*current_password':
                  type: string
                  description: ''
                  example: '1,2,3 in JSON BODY'
                '*new_password':
                  type: string
                  description: ''
                  example: '1,2,3 in JSON BODY'
                '*retype_password':
                  type: string
                  description: ''
                  example: '1,2,3 in JSON BODY'
              required:
                - '*user_id'
                - '*current_password'
                - '*new_password'
                - '*retype_password'
tags:
  -
    name: 'Country State & City'
    description: "\nAPIs for managing all country, state, city"
  -
    name: 'Login, Register'
    description: "\nAPIs for managing all Auth Related"
  -
    name: 'NrisTalk Related'
    description: "\nAPIs for managing all nris talk and its reply related"
  -
    name: 'User Profile Related'
    description: "\nAPIs for managing all user's profile related"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
